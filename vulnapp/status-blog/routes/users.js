const express = require('express');
const http = require('http');
const router = express.Router();
const session = require('express-session');

// Add session middleware
router.use(session({
  secret: 'hnhdiuhiwuqnk2983d9nbd2937b9d723bd9b293d',
  resave: false,
  saveUninitialized: true,
  cookie: {
    httpOnly: true,
    sameSite: 'strict',
    maxAge: 3600000, // Example: set the session to expire after 1 hour
  }
}));

router.get('/', function(req, res, next) {
  const requestString = req.query.request;
  const url = `http://api:8080/${requestString}`;

  const options = {
    headers: {
      'API-Key': '980u9wdhc978wh9hbf9w7hb97fhw9e7fb'
    }
  };

  http.get(url, options, (response) => {
    let responseData = '';
    response.on("data", (chunk) => {
      responseData += chunk;
    });
    response.on("end", () => {
      const status = JSON.parse(responseData).status;
      console.log(status);
      res.send(`${status}`);
    });
  }).on("error", (err) => {
    console.error("Error: " + err.message);
    res.status(500).send("Internal Server Error");
  });
});

router.post('/login', function(req, res, next) {
  const username = req.body.username;
  const password = req.body.password;
  const url = `http://api:8080/login`;

  const options = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
      'API-Key': '980u9wdhc978wh9hbf9w7hb97fhw9e7fb'
    }
  };

  const apiRequest = http.request(url, {method:'POST', headers: {"Content-Type": 'application/x-www-form-urlencoded; charset=UTF-8'}}, (response)=>{
      response.on("data", (data)=>{
        console.log(`login response: ${data.toString()}`);
        if (response.statusCode == 401) {
          res.render('index', { msg: "Wrong credentials." });
        } else if (response.statusCode == 200) {
          // Store username in session upon successful login
          req.session.username = username;
          // Redirect to homepage
          res.redirect('/');
        }
      })
  });

  apiRequest.on("error", (err) => {
    console.error("Error: " + err.message);
    res.status(500).send("Internal Server Error");
  });

  apiRequest.write(`username=${username}&password=${password}`);
  apiRequest.end();
});

module.exports = router;
